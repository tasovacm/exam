{"ast":null,"code":"var _jsxFileName = \"c:\\\\development\\\\exam\\\\src\\\\gallery-item.js\";\nimport React from 'react';\nexport default class GalleryItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expand: false\n    };\n    this.clickHandler = this.clickHandler.bind(this);\n  }\n\n  clickHandler() {\n    this.setState({\n      expand: false\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevState.expand === false) {\n      this.setState({\n        expand: true\n      });\n    }\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"click\", this.clickHandler);\n  }\n\n  render() {\n    const handleBlur = e => {\n      const currentTarget = e.currentTarget; // Check the newly focused element in the next tick of the event loop\n\n      setTimeout(() => {\n        // Check if the new activeElement is a child of the original container\n        if (!currentTarget.contains(document.activeElement)) {\n          console.log(\"blur\");\n        }\n      }, 0);\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      tabIndex: 1,\n      className: \"gallery-item margin-10 gallery-item \" + (!!this.state.expand ? \"gallery-item-active\" : \"\"),\n      style: {\n        backgroundImage: 'url(/assets/' + this.props.url + ')'\n      },\n      onClick: () => {\n        !this.state.expand ? this.setState({\n          expand: false\n        }) : this.setState({\n          expand: true\n        });\n        !!this.state.expand ? this.setState({\n          expand: false\n        }) : this.setState({\n          expand: true\n        });\n      },\n      onBlur: handleBlur,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["c:/development/exam/src/gallery-item.js"],"names":["React","GalleryItem","Component","constructor","props","state","expand","clickHandler","bind","setState","componentDidUpdate","prevProps","prevState","snapshot","componentDidMount","document","addEventListener","render","handleBlur","e","currentTarget","setTimeout","contains","activeElement","console","log","backgroundImage","url"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,WAAN,SAA0BD,KAAK,CAACE,SAAhC,CAA0C;AACrDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAQA,KAAR;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAG;AADA,KAAb;AAGA,SAAKC,YAAL,GAAkB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAAlB;AACH;;AAEDD,EAAAA,YAAY,GAAE;AACV,SAAKE,QAAL,CAAc;AAACH,MAAAA,MAAM,EAAC;AAAR,KAAd;AACH;;AACDI,EAAAA,kBAAkB,CAACC,SAAD,EAAaC,SAAb,EAAyBC,QAAzB,EAAmC;AACjD,QAAID,SAAS,CAACN,MAAV,KAAqB,KAAzB,EAAgC;AAC5B,WAAKG,QAAL,CAAgB;AAAEH,QAAAA,MAAM,EAAG;AAAX,OAAhB;AACH;AACJ;;AACDQ,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmC,KAAKT,YAAxC;AACH;;AAEDU,EAAAA,MAAM,GAAG;AACL,UAAMC,UAAU,GAAIC,CAAD,IAAO;AACtB,YAAMC,aAAa,GAAGD,CAAC,CAACC,aAAxB,CADsB,CAGtB;;AACAC,MAAAA,UAAU,CAAG,MAAM;AACf;AACA,YAAI,CAACD,aAAa,CAACE,QAAd,CAAyBP,QAAQ,CAACQ,aAAlC,CAAL,EAAwD;AACpDC,UAAAA,OAAO,CAACC,GAAR,CAAc,MAAd;AACH;AACJ,OALS,EAKN,CALM,CAAV;AAMH,KAVD;;AAYA,wBAAQ;AAAK,MAAA,QAAQ,EAAE,CAAf;AACK,MAAA,SAAS,EAAE,0CAA0C,CAAC,CAAC,KAAKpB,KAAL,CAAWC,MAAb,GAAsB,qBAAtB,GAA8C,EAAxF,CADhB;AAEK,MAAA,KAAK,EAAE;AACHoB,QAAAA,eAAe,EAAG,iBAAiB,KAAKtB,KAAL,CAAWuB,GAA5B,GAAkC;AADjD,OAFZ;AAMK,MAAA,OAAO,EAAE,MAAM;AACX,SAAC,KAAKtB,KAAL,CAAWC,MAAZ,GAAqB,KAAKG,QAAL,CAAgB;AAAEH,UAAAA,MAAM,EAAG;AAAX,SAAhB,CAArB,GAA4D,KAAKG,QAAL,CAAgB;AAAEH,UAAAA,MAAM,EAAG;AAAX,SAAhB,CAA5D;AACA,SAAC,CAAC,KAAKD,KAAL,CAAWC,MAAb,GAAsB,KAAKG,QAAL,CAAgB;AAAEH,UAAAA,MAAM,EAAG;AAAX,SAAhB,CAAtB,GAA6D,KAAKG,QAAL,CAAgB;AAAEH,UAAAA,MAAM,EAAG;AAAX,SAAhB,CAA7D;AACH,OATN;AAUK,MAAA,MAAM,EAAEY,UAVb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AAgBH;;AAlDoD","sourcesContent":["import React from 'react'\r\n\r\nexport default class GalleryItem extends React.Component {\r\n    constructor(props) {\r\n        super ( props );\r\n        this.state = {\r\n            expand : false ,\r\n        };\r\n        this.clickHandler=this.clickHandler.bind(this);\r\n    }\r\n\r\n    clickHandler(){\r\n        this.setState({expand:false})\r\n    }\r\n    componentDidUpdate(prevProps , prevState , snapshot) {\r\n        if (prevState.expand === false) {\r\n            this.setState ( { expand : true } )\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        document.addEventListener(\"click\", this.clickHandler)\r\n    }\r\n\r\n    render() {\r\n        const handleBlur = (e) => {\r\n            const currentTarget = e.currentTarget;\r\n\r\n            // Check the newly focused element in the next tick of the event loop\r\n            setTimeout ( () => {\r\n                // Check if the new activeElement is a child of the original container\r\n                if (!currentTarget.contains ( document.activeElement )) {\r\n                    console.log ( \"blur\" )\r\n                }\r\n            } , 0 );\r\n        };\r\n\r\n        return (<div tabIndex={1}\r\n                     className={\"gallery-item margin-10 gallery-item \" + (!!this.state.expand ? \"gallery-item-active\" : \"\")}\r\n                     style={{\r\n                         backgroundImage : 'url(/assets/' + this.props.url + ')'\r\n                     }}\r\n\r\n                     onClick={() => {\r\n                         !this.state.expand ? this.setState ( { expand : false } ) : this.setState ( { expand : true } )\r\n                         !!this.state.expand ? this.setState ( { expand : false } ) : this.setState ( { expand : true } )\r\n                     }}\r\n                     onBlur={handleBlur}\r\n\r\n\r\n        />)\r\n\r\n\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}